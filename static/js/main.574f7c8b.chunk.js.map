{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-filter/index.js","components/todo-filter/todo-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","active","finished","text","concat","react_default","a","createElement","className","TodoListItem","props","label","id","done","important","toggleState","deleteItem","textClasses","cn","todo-list-text","todo-list-text--finished","todo-list-text--important","type","onClick","TodoList","items","handlers","Object","objectWithoutProperties","elements","map","item","components_todo_list_item","assign","key","SearchPanel","onChange","event","value","target","updateFilter","_this","toLowerCase","this","placeholder","Component","ItemStatusFilter","filters","name","_this$props","state","buttons","isActive","classes","btn","btn-primary","btn-outline-secondary","TodoFilter","toggleFilterState","components_search_panel","components_item_status_filter","ItemAddForm","onSubmit","preventDefault","addItem","setState","required","App","maxId","todoData","createTodoItem","filterState","filterString","filterMap","_ref2","onAddItem","newItem","_ref3","toConsumableArray","stateName","_ref4","reduce","acc","objectSpread","defineProperty","_ref5","filter","handleFilterState","_this2","_this$state","doneCount","el","length","todoCount","items2","_ref6","indexOf","components_app_header","components_todo_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.574f7c8b.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({ active, finished }) => {\n  const text = `${active} more to do, ${finished} done`;\n\n  return (\n    <div className=\"d-flex app-header\">\n      <h1>Todo list</h1>\n      <span>{text}</span>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;\n","import React from 'react';\nimport cn from 'classnames';\nimport './todo-list-item.css';\n\nconst TodoListItem = (props) => {\n  const {\n    label, id, done, important, toggleState, deleteItem,\n  } = props;\n  const textClasses = cn({\n    'todo-list-text': true,\n    'todo-list-text--finished': done,\n    'todo-list-text--important': important,\n  });\n  return (\n    <li className=\"list-group-item d-flex todo-list-item\">\n      <button className=\"todo-list-item__btn\" type=\"button\" onClick={toggleState(id, 'done')}>\n        <span className={textClasses}>{label}</span>\n      </button>\n      <div className=\"todo-list-item__btns d-flex\">\n        <button type=\"button\" onClick={deleteItem(id)} className=\"btn btn-outline-danger btn-sm mr-2\">\n          <span className=\"fa fa-trash-o\" />\n        </button>\n        <button type=\"button\" onClick={toggleState(id, 'important')} className=\"btn btn-outline-success btn-sm\">\n          <span className=\"fa fa-exclamation\" />\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoListItem;\n","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React from 'react';\nimport TodoListItem from '../todo-list-item';\n\nconst TodoList = ({ items, ...handlers }) => {\n  const elements = items.map(item => <TodoListItem key={item.id} {...item} {...handlers} />);\n\n  return (\n    <ul className=\"list-group mt-3\">\n      {elements}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React, { Component } from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n  onChange = (event) => {\n    const { value } = event.target;\n    const { updateFilter } = this.props;\n    updateFilter(value.toLowerCase());\n  };\n\n  render() {\n    return (\n      <div className=\"search-panel mr-2\">\n        <input onChange={this.onChange} className=\"form-control\" type=\"text\" placeholder=\"Type to search\" />\n      </div>\n    );\n  }\n}\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;\n","import React, { Component } from 'react';\nimport cn from 'classnames';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n  filters = [{ name: 'all', value: 'All' }, { name: 'active', value: 'Active' }, { name: 'done', value: 'Done' }]\n\n  render() {\n    const { toggleState, state } = this.props;\n    const buttons = this.filters.map(({ name, value }) => {\n      const isActive = name === state;\n      const classes = cn({\n        btn: true,\n        'btn-primary': isActive,\n        'btn-outline-secondary': !isActive,\n      });\n      return (\n        <button\n          key={name}\n          type=\"button\"\n          onClick={toggleState(name)}\n          className={classes}\n        >\n          {value}\n        </button>\n      );\n    });\n    return (\n      <div className=\"btn-group\">{buttons}</div>\n    );\n  }\n}\n","import TodoFilter from './todo-filter';\n\nexport default TodoFilter;\n","import React from 'react';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\n\nconst TodoFilter = ({ toggleFilterState, state, updateFilter }) => (\n  <div className=\"d-flex mt-3\">\n    <SearchPanel updateFilter={updateFilter} />\n    <ItemStatusFilter state={state} toggleState={toggleFilterState} />\n  </div>\n);\n\nexport default TodoFilter;\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;\n","import React, { Component } from 'react';\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n  state = {\n    text: '',\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { addItem } = this.props;\n    const { text } = this.state;\n    addItem(text);\n    this.setState({ text: '' });\n  };\n\n  onChange = (event) => {\n    const { value } = event.target;\n    this.setState({ text: value });\n  };\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"mt-3\">\n        <div className=\"form-group d-flex\">\n          <input value={text} onChange={this.onChange} type=\"text\" className=\"form-control mr-1\" placeholder=\"What needs to be done?\" required />\n          <button type=\"submit\" className=\"btn btn-outline-secondary\">Add</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header';\nimport TodoList from '../todo-list';\nimport TodoFilter from '../todo-filter';\nimport ItemAddForm from '../item-add-form';\n\nimport './app.css';\n\nexport default class App extends Component {\n  maxId = 1;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Drink Coffee'),\n      this.createTodoItem('Make Awesome App'),\n      this.createTodoItem('Have a lunch'),\n    ],\n    filterState: 'all',\n    filterString: '',\n  };\n\n  filterMap = {\n    active: ({ done }) => !done,\n    done: ({ done }) => done,\n  }\n\n  onAddItem = (text) => {\n    const newItem = this.createTodoItem(text);\n    this.setState(({ todoData }) => {\n      const newData = [...todoData, newItem];\n      return { todoData: newData };\n    });\n  };\n\n  toggleState = (id, stateName) => () => {\n    this.setState(({ todoData }) => {\n      const newData = todoData.reduce((acc, item) => {\n        if (id !== item.id) {\n          return [...acc, item];\n        }\n        return [...acc, { ...item, [stateName]: !item[stateName] }];\n      }, []);\n      return { todoData: newData };\n    });\n  };\n\n  deleteItem = id => () => {\n    this.setState(({ todoData }) => {\n      const newData = todoData.filter(item => item.id !== id);\n      return { todoData: newData };\n    });\n  };\n\n  handleFilterState = state => () => {\n    this.setState({ filterState: state });\n  }\n\n  updateFilter = (text) => {\n    this.setState({ filterString: text });\n  }\n\n  createTodoItem(label) {\n    const id = this.maxId;\n    this.maxId += 1;\n    return {\n      label,\n      important: false,\n      done: false,\n      id,\n    };\n  }\n\n  render() {\n    const { todoData, filterState, filterString } = this.state;\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    const items = filterState === 'all' ? todoData : todoData.filter(item => this.filterMap[filterState](item));\n\n    const filterStringLength = filterString.length;\n    const items2 = filterStringLength === 0 ? items : items.filter(({ label }) => (\n      label.toLowerCase().indexOf(filterString) > -1));\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader active={todoCount} finished={doneCount} />\n        <TodoFilter\n          updateFilter={this.updateFilter}\n          toggleFilterState={this.handleFilterState}\n          state={filterState}\n        />\n        <TodoList\n          items={items2}\n          toggleState={this.toggleState}\n          deleteItem={this.deleteItem}\n        />\n        <ItemAddForm addItem={this.onAddItem} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}