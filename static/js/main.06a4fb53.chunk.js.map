{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-filter/index.js","components/todo-filter/todo-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_this$props","this","props","active","finished","text","concat","react_default","a","createElement","className","Component","TodoListItem","label","id","done","important","toggleState","deleteItem","textClasses","cn","todo-list-text","todo-list-text--finished","todo-list-text--important","onClick","TodoList","items","handlers","Object","objectWithoutProperties","elements","map","item","components_todo_list_item","assign","key","SearchPanel","onChange","event","value","target","updateFilter","_this","toLowerCase","type","placeholder","ItemStatusFilter","filters","name","state","buttons","_ref","isActive","classes","btn","btn-primary","btn-outline-secondary","TodoFilter","toggleFilterState","components_search_panel","components_item_status_filter","ItemAddForm","onSubmit","preventDefault","addItem","setState","required","App","maxId","todoData","createTodoItem","filterState","filterString","onAddItem","newItem","toConsumableArray","stateName","_ref2","reduce","acc","objectSpread","defineProperty","_ref3","filter","handleFilterState","filterMap","_ref4","_ref5","_this2","_this$state","doneCount","el","length","todoCount","items2","_ref6","indexOf","components_app_header","todo_filter","todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.06a4fb53.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React, { Component } from 'react';\nimport './app-header.css';\n\nexport default class AppHeader extends Component {\n\n  render() {\n    const { active, finished } = this.props;\n    const text = `${active} more to do, ${finished} done`;\n\n    return(\n      <div className=\"d-flex app-header\">\n        <h1>Todo list</h1>\n        <span>{text}</span>\n      </div>\n    );\n  }\n}","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;\n","import React, { Component } from 'react';\nimport cn from 'classnames';\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n  render() {\n    const { label, id, done, important, toggleState, deleteItem } = this.props;\n    const textClasses = cn({\n      'todo-list-text': true,\n      'todo-list-text--finished': done,\n      'todo-list-text--important': important,\n    });\n    return (\n      <li className=\"list-group-item d-flex todo-list-item\">\n        <span onClick={toggleState(id, 'done')} className={textClasses}>{label}</span>\n        <div className=\"todo-list-item__btns d-flex\">\n          <button onClick={deleteItem(id)} className=\"btn btn-outline-danger btn-sm mr-2\">\n            <span className=\"fa fa-trash-o\"></span>\n          </button>\n          <button onClick={toggleState(id, 'important')} className=\"btn btn-outline-success btn-sm\">\n            <span className=\"fa fa-exclamation\"></span>\n          </button>\n        </div>\n      </li>\n    );\n  }\n}","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport TodoListItem from '../todo-list-item';\n\nexport default class TodoList extends Component {\n\n  render() {\n    const { items, ...handlers } = this.props;\n    const elements = items.map(item => <TodoListItem key={item.id} { ...item } { ...handlers } />)\n\n    return (\n      <ul className=\"list-group mt-3\">\n        {elements}\n      </ul>\n    );\n  }\n}","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React, { Component } from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n  onChange = (event) => {\n    const { value } = event.target;\n    const { updateFilter } = this.props;\n    updateFilter(value.toLowerCase());\n  };\n\n  render() {\n    return (\n      <div className=\"search-panel mr-2\">\n        <input onChange={this.onChange} className=\"form-control\" type=\"text\" placeholder=\"Type to search\"/>\n      </div>\n    );\n  }\n}","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;\n","import React, { Component } from 'react';\nimport cn from 'classnames';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n  filters = [{ name: 'all', value: 'All' }, { name: 'active', value: 'Active' }, { name: 'done', value: 'Done' },]\n\n  render() {\n    const { toggleState, state } = this.props;\n    const buttons = this.filters.map(({ name, value }) => {\n      const isActive = name === state;\n      const classes = cn({\n        'btn': true,\n        'btn-primary': isActive,\n        'btn-outline-secondary': !isActive,\n      });\n      return (\n        <button key={name}\n                type=\"button\"\n                onClick={toggleState(name)}\n                className={classes}>{value}</button>\n      );\n    });\n    return (\n      <div className=\"btn-group\">{buttons}</div>\n    );\n  }\n}","import TodoFilter from './todo-filter';\n\nexport default TodoFilter;\n","import React, { Component } from 'react';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\n\nexport default class TodoFilter extends Component {\n  render() {\n    const { toggleFilterState, state, updateFilter } = this.props;\n\n    return (\n      <div className=\"d-flex mt-3\">\n        <SearchPanel updateFilter={updateFilter}/>\n        <ItemStatusFilter state={state} toggleState={toggleFilterState}/>\n      </div>\n    );\n  }\n}","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;\n","import React, { Component } from 'react';\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n  state = {\n    text: '',\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { addItem } = this.props;\n    const { text } = this.state;\n    addItem(text);\n    this.setState({ text: '' });\n  };\n\n  onChange = (event) => {\n    const { value } = event.target;\n    this.setState({ text: value });\n  };\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"mt-3\">\n        <div className=\"form-group d-flex\">\n          <input value={text} onChange={this.onChange} type=\"text\" className=\"form-control mr-1\" placeholder=\"What needs to be done?\" required />\n          <button type=\"submit\" className=\"btn btn-outline-secondary\">Add</button>\n        </div>\n      </form>\n    );\n  }\n}","import App from './app';\n\nexport default App;\n","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header';\nimport TodoList from '../todo-list';\nimport TodoFilter from '../todo-filter';\nimport ItemAddForm from '../item-add-form';\n\nimport './app.css';\n\nexport default class App extends Component {\n  maxId = 1;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Drink Coffee'),\n      this.createTodoItem('Make Awesome App'),\n      this.createTodoItem('Have a lunch'),\n    ],\n    filterState: 'all',\n    filterString: '',\n  };\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    }\n  }\n\n  onAddItem = (text) => {\n    const newItem = this.createTodoItem(text);\n    this.setState(({todoData}) => {\n      const newData = [...todoData, newItem];\n      return { todoData: newData };\n    });\n  };\n\n  toggleState = (id, stateName) => () => {\n    this.setState(({todoData}) => {\n      const newData = todoData.reduce((acc, item) => {\n        if (id !== item.id) {\n          return [...acc, item];\n        }\n        return [...acc, { ...item, [stateName]: !item[stateName] }];\n      }, []);\n      return { todoData: newData };\n    });\n  };\n\n  deleteItem = (id) => () => {\n    this.setState(({todoData}) => {\n      const newData = todoData.filter(item => item.id !== id);\n      return { todoData: newData };\n    });\n  };\n\n  handleFilterState = (state) => () => {\n    this.setState({ filterState: state });\n  }\n\n  updateFilter = (text) => {\n    this.setState({ filterString: text });\n  }\n  \n  filterMap = {\n    active: ({done}) => !done,\n    done: ({done}) => done,\n  }\n\n  render() {\n    const { todoData, filterState, filterString } = this.state;\n    const doneCount = todoData.filter((el) => el.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    const items = filterState === 'all' ? todoData : todoData.filter(item => this.filterMap[filterState](item));\n    \n    const filterStringLength = filterString.length;\n    const items2 = filterStringLength === 0 ? items : items.filter(({label}) => label.toLowerCase().indexOf(filterString) > -1);\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader active={todoCount} finished={doneCount} />\n        <TodoFilter updateFilter={this.updateFilter} toggleFilterState={this.handleFilterState} state={filterState}/>\n        <TodoList items={items2} toggleState={this.toggleState} deleteItem={this.deleteItem} />\n        <ItemAddForm addItem={this.onAddItem}/>\n      </div>\n    );\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}